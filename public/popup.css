:root {
    --ruy-andrade-color: 13, 72, 42
}

body {
    color: rgb(var(--ruy-andrade-color));
    width: 98vw;
    min-width: 98vw;
}

ul {
    list-style-position: inside;
}

form {
    padding: 10px 10px 0;
}

fieldset {
    border-color: rgba(var(--ruy-andrade-color), .3);
    border-radius: 0.7rem;
    border-style: solid;
    border-width: 1px;
    padding: 1.5rem 0.5rem;
}

legend.sisifo-v-label {
    font-weight: bolder;
    font-size: 1.3rem;
    width: fit-content;
}

fieldset div:has(> .sisifo-label) {
    flex-direction: row;
    align-items: center;
}    

div:has(> .sisifo-label) {
    display: flex;
    flex-direction: column;
    padding: 0 5px;
}    

div:has(> .sisifo-v-label) {
    display: flex;
    flex-direction: column;
    align-items: center;
    padding: 0 5px;
}

header.well {
    text-align: center;
    margin-bottom: 0;
    padding: 0;
}

input:disabled {
    cursor: text !important;
}

.well {
    padding-bottom: 0;
    margin-bottom: 0;
}

.inputGroupContainer {
    padding: 0;
}

.sisifo-label {
    font-size: 1.2rem;
    margin-bottom: 0;
    padding: 0 12px;
}

.sisifo-v-label {
    font-size: 1.2rem;
    text-align: center;
    margin-bottom: 0;
    padding: 0;
}

.d-flex {
    display: flex;
    justify-content: space-evenly;
}

.input-group:has(> img) {
    margin: auto;
}

.no-padding {
    padding: 0 !important;
}

.no-padding .form-control {
    height: 100%;
}

div.no-padding:has(svg) {
    display: flex;
    flex-direction: column;
    justify-content: center;
}

.no-padding > div:has(.trash) {
    display: flex;
}

.centered {
    text-align: center !important;
}

.one-liner {
    height: 2.5rem;
}

svg.one-liner:has(> path.trash) {
    height: 2rem;
}

div > .one-liner {
    width: fit-content;
}

.add {
    fill: rgb(var(--ruy-andrade-color));
}

.trash {
    fill: red;
}

.f-size {
    width: 14px;
}

.one-liner + .sisifo-label {
    padding-left: 0.5rem;
    
}

.pointer {
    cursor: pointer;
}

.fit {
    width: fit-content;
}

.col-sm-12 > .inputGroupContainer.d-flex {
    margin-top: 1rem;
}

aside:has(> .result-msg) {
    margin: 2rem;
}

.capped-btn-container {
    display: flex;
    max-height: calc(2 * var(--capped-btn-inset) + var(--capped-btn-height));
    width: fit-content;
    margin: 1.5rem auto;
    --capped-btn-height: 55px;
    --capped-btn-width: 90px;
    --capped-btn-inset: 10px;
    --capped-btn-total-w: calc(2 * var(--capped-btn-inset) + var(--capped-btn-width));
    --cap-color: rgb(189, 158, 121);
    --cap-strips-color: rgb(255, 254, 0);
    align-items: center;
    justify-content: center;
}

.btn-cap-group {
    position: absolute;
    display: flex;
    transition: 300ms;
    filter: drop-shadow(-4px 4px 5px #402001);
    height: var(--capped-btn-height);
    width: var(--capped-btn-total-w);
    flex-direction: column;
    justify-content: center;
    -webkit-user-select: none;
    -khtml-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
  
}

.capped-btn-container[open] .btn-cap-group {
    --capped-btn-travel-distance: calc(1.5rem + var(--capped-btn-total-w));
    transform: translateX(var(--capped-btn-travel-distance));
}

.cap-coloured-strips {
    stroke: var(--cap-strips-color);
}

.btn-cap {
    border-radius: 0 12px 12px 0;
}

.btn-cap-text {
    position: absolute;
    font-size: 1.7rem;
    font-weight: bolder;
    color: var(--cap-strips-color);
    padding-left: .8rem;
}

.result-msg {
    margin: auto;
    border-radius: 0.5rem;
    border: 1px solid;
    padding: 1rem;
    max-width: 80%;
    font-size: 1.5rem;
}

.success {
    background-color: #00800026;
    color: green;
}

.processing {
    background-color: rgba(0, 0, 255, 0.19);
    color: rgb(0, 0, 88);
}

.fail {
    background-color: rgba(255, 0, 0, 0.218);
    color: rgb(205, 0, 0);
}

.d-none {
    display: none;
}

.copy {
    cursor: grab;
    text-decoration: underline;
}

.copy::after {
    content: " ";
    background-image: url("./images/copy.svg");
    display: inline-block;
    width: 1em;
    height: 1em;
    position: relative;
    bottom: 3px;
}

.copy:hover {
    color: darkred;
    text-decoration: none;
}

.copy:active {
    color: darkred;
    cursor: grabbing;
    text-decoration: none;
}